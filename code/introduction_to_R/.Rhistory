#rema <- read.csv("/Volumes/GoogleDrive/Shared drives/Time_Adaptive_STB/Data/Final Merge rEMA mEMA.csv")
#rema <- read.csv("G:/Shared drives/Time_Adaptive_STB/Data/Final Merge rEMA mEMA.csv")
colnames(rema)
rema <- read.csv("G:/Shared drives/Remote EMA Study (Long-Term Text)/First 30 day EMA data/Data/Final Dataset 02-07-2022.csv")
rema <- read.csv("/Volumes/GoogleDrive/Shared drives/Remote EMA Study (Long-Term Text)/First 30 day EMA data/Data/Final Dataset 02-07-2022.csv")
library(tidyverse);library(lme4);library(ggplot2);library(DataCombine)
library(EMAtools);library(nlme);library(lmerTest)
library(performance);library(brms)
rema = rema[!rema$subject_id %in% c(23335,23406,23408,23404,23411),]
rema$time = rema$timestamp/60
rema$time = rema$time/60
length(table(rema$subject_id))
library(lme4)
library(tidyverse)
rema$passive1 = rema[,"LIFE_IS_NOT_WORTH_LIVING_FOR_ME"]
rema$passive2 = rema[,"THERE_ARE_MORE_REASON_TO_DIE_THAN_TO_LIV"]
rema$active1 = rema[,"EMA_FE5"]
rema$active2 = rema[,"EMA_FE6"]
library(mice)
rema = rema[complete.cases(rema[,c("passive1","passive2","active1","active2")]),]
cor(rema[,c("passive1","passive2","active1","active2")])
psych::fa.parallel(rema[,c("passive1","passive2","active1","active2")])
rema$active = rowSums(rema[,c("active1","active2")])
rema$passive = rowSums(rema[,c("passive1","passive2")])
rema_comp = rema
library(lubridate)
library(dplyr)
library(doBy)
dtparts = t(as.data.frame(strsplit(rema_comp$local_date,' ')))
colnames(dtparts) = c("day","hour")
dtparts <- as.data.frame(dtparts)
rema_comp$day = dtparts$day
rema_comp$day = dtparts$day
rema_comp$hour = dtparts$hour
rema_comp2 = orderBy(~respondent_id+time, data=rema_comp)
id = names(which(table(rema_comp2$subject_id) < 20))
rema_comp3 = rema_comp2[!rema_comp2$subject_id %in% id,]
table(rema_comp3$subject_id)
rema_comp3$time_0 = NA
tabb = table(rema_comp3$subject_id)
for(i in 1:length(tabb)){
nam = names(tabb[i])
rema_comp3[rema_comp3$subject_id == nam,"time_0"] = rema_comp3[rema_comp3$subject_id == nam,"time"] - min(rema_comp3[rema_comp3$subject_id == nam,"time"])
}
summary(lengths(sapply(split(rema_comp3$day,rema_comp3$subject_id),table)))
# discrete time
# create time number variable
rema_comp3$time_seq = NA
tabb = table(rema_comp3$subject_id)
for(i in 1:length(tabb)){
nam = names(tabb[i])
rema_comp3[rema_comp3$subject_id == nam,"time_seq"] = 1:tabb[i]
}
time_id = rema_comp3[,c("subject_id","time")]
library(psych)
diff1 = diff(time_id$time)
diff2 = diff1[abs(diff1) <= 12]
hist(diff2,32,xlab="Hours Between Assessments",main="")
mean(diff2)
table(round(diff2))
rema_comp4 = rema_comp3
datt4.sub = rema_comp4[,c("HOW_MANY_FRIENDS_FAMILY_MEMBERS_HAVE_YOU","HOW_MANY_MINUTES_HAVE_YOU_SPENT_DIRECTLY",
"HOW_MEANINGFUL_WERE_YOUR_INTERACTIONS","SINCE_THE_LAST_PROMPT_HAVE_YOU_EXPERIEN","subject_id")]
library(tidyverse); library(broom)
datt4.sub2 = datt4.sub %>%
group_by(subject_id) %>%
scale()
datt4.sub3 = cbind(datt4.sub2[,-5],rema_comp4[,c("active","passive","time_0","time_seq","subject_id")])
colnames(datt4.sub3)[1:4] = c("number_social_interact","minutes_social","meaning_interactions","social_conflict")
library(ctsem)
library(ctsem)
examplemodel55 <- ctModel(type="stanct",id="subject_id",time="time_0",
n.latent=3,n.manifest=3,n.TDpred=0,
manifestNames=c("passive","meaning_interactions","social_conflict"),
latentNames=c("passive","meaning_interactions","social_conflict"),
LAMBDA=diag(3),
DRIFT=matrix(c("drift_passive",0,0,
"drift_meaning_interactions_passive","drift_meaning_interactions",0,
"drift_social_conflict_passive",0,"drift_social_conflict"),3,3,byrow=T))
fit55 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel55,iter=2000,
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
#nlcontrol=list(maxtimestep=20))#,inits=c(-.1,-.5))#inits=list(drift_I_THINK_ABOUT_TAKING_MY_LIFE=-.5))
summary(fit55,timeinterval=10)
plot(fit55)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='My ggplot modification')
g12 = g1
xx <- ctStanDiscretePars(fit55,nsamples=1000)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='My ggplot modification')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.passive" | g1$data$Effect == "meaning_interactions.passive"]
plot(g12)
xx <- ctStanDiscretePars(fit55,nsamples=3000)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='Cross Lag Parameters')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.passive" | g1$data$Effect == "meaning_interactions.passive"]
plot(g12)
?ctStanDiscretePars
examplemodel66 <- ctModel(type="stanct",id="subject_id",time="time_0",
n.latent=3,n.manifest=3,n.TDpred=0,
manifestNames=c("active","meaning_interactions","social_conflict"),
latentNames=c("active","meaning_interactions","social_conflict"),
LAMBDA=diag(3),
DRIFT=matrix(c("drift_active",0,0,
"drift_meaning_interactions_active","drift_meaning_interactions",0,
"drift_social_conflict_active",0,"drift_social_conflict"),3,3,byrow=T))
fit66 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel66,iter=2000,
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
plot(fit66)
xx <- ctStanDiscretePars(fit66,nsamples=1000)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='My ggplot modification')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.active" | g1$data$Effect == "meaning_interactions.active"]
plot(g12)
xx <- ctStanDiscretePars(fit66,nsamples=2000)
fit66 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel66,iter=4000,
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
xx <- ctStanDiscretePars(fit66,nsamples=2000)
?ctStanFit
fit66 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel66,iter=4000,optimcontrol=(finishsamples=2000),
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
fit66 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel66,iter=4000,optimcontrol=(finishsamples=2000),
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
fit66 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel66,iter=4000,optimcontrol=(finishsamples=1000),
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
fit55 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel55,iter=2000,optimcontrol=(finishsamples=2000),
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
xx <- ctStanDiscretePars(fit55,nsamples=2000)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='Cross Lag Parameters')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.passive" | g1$data$Effect == "meaning_interactions.passive"]
plot(g12)
fit55 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel55,iter=2000,optimcontrol=(finishsamples=2000),
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
fit55 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel55,iter=2000,#optimcontrol=(finishsamples=2000),
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
xx <- ctStanDiscretePars(fit55,nsamples=2000)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='Cross Lag Parameters')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.passive" | g1$data$Effect == "meaning_interactions.passive"]
plot(g12)
fit66 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel66,iter=4000,#optimcontrol=(finishsamples=1000),
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
#nlcontrol=list(maxtimestep=20))#,inits=c(-.1,-.5))#inits=list(drift_I_THINK_ABOUT_TAKING_MY_LIFE=-.5))
summary(fit66,timeinterval=10)
xx <- ctStanDiscretePars(fit66,nsamples=2000)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='Cross Lag Parameters for Active')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.active" | g1$data$Effect == "meaning_interactions.active"]
plot(g12)
fit66 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel66,iter=4000,#optimcontrol=(finishsamples=1000),
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
xx <- ctStanDiscretePars(fit66,nsamples=2000)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='Cross Lag Parameters for Active')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.active" | g1$data$Effect == "meaning_interactions.active"]
plot(g12)
xx <- ctStanDiscretePars(fit66,nsamples=2000)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='Cross Lag Parameters for Active')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.active" | g1$data$Effect == "meaning_interactions.active"]
plot(g12)
#nlcontrol=list(maxtimestep=20))#,inits=c(-.1,-.5))#inits=list(drift_I_THINK_ABOUT_TAKING_MY_LIFE=-.5))
summary(fit66,timeinterval=10)
plot(fit66)
plot(g12)
xx <- ctStanDiscretePars(fit66,nsamples=2000)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='Cross Lag Parameters for Active')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.active" | g1$data$Effect == "meaning_interactions.active"]
plot(g12)
xx <- ctStanDiscretePars(fit55,nsamples=2000)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='Cross Lag Parameters')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.passive" | g1$data$Effect == "meaning_interactions.passive"]
plot(g12)
xx <- ctStanDiscretePars(fit55,nsamples=2000)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='Cross Lag Parameters')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.passive" | g1$data$Effect == "meaning_interactions.passive"]
plot(g12)
?ctStanDiscretePars
xx <- ctStanDiscretePars(fit55,nsamples=2000,times = seq(from = 0, to = 20, by = 0.1))
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='Cross Lag Parameters')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.passive" | g1$data$Effect == "meaning_interactions.passive"]
plot(g12)
#nlcontrol=list(maxtimestep=20))#,inits=c(-.1,-.5))#inits=list(drift_I_THINK_ABOUT_TAKING_MY_LIFE=-.5))
summary(fit66,timeinterval=10)
summary(active.combine.alltime)
active.combine.alltime = lmer(active_lead~1+HOW_MEANINGFUL_WERE_YOUR_INTERACTIONS+
HOW_MANY_MINUTES_HAVE_YOU_SPENT_DIRECTLY+
HOW_MANY_FRIENDS_FAMILY_MEMBERS_HAVE_YOU+
(1|subject_id),data=datt55)
active.combine.alltime = lmer(active_lead~1+HOW_MEANINGFUL_WERE_YOUR_INTERACTIONS+
HOW_MANY_MINUTES_HAVE_YOU_SPENT_DIRECTLY+
HOW_MANY_FRIENDS_FAMILY_MEMBERS_HAVE_YOU+
(1|subject_id),data=datt55)
#rema <- read.csv("/Volumes/GoogleDrive/Shared drives/Time_Adaptive_STB/Data/Final Merge rEMA mEMA.csv")
#rema <- read.csv("G:/Shared drives/Time_Adaptive_STB/Data/Final Merge rEMA mEMA.csv")
colnames(rema)
#rema <- read.csv("/Volumes/GoogleDrive/Shared drives/Time_Adaptive_STB/Data/Final Merge rEMA mEMA.csv")
#rema <- read.csv("G:/Shared drives/Time_Adaptive_STB/Data/Final Merge rEMA mEMA.csv")
colnames(rema)
rema <- read.csv("G:/Shared drives/Remote EMA Study (Long-Term Text)/First 30 day EMA data/Data/Final Dataset 02-07-2022.csv")
rema <- read.csv("/Volumes/GoogleDrive/Shared drives/Remote EMA Study (Long-Term Text)/First 30 day EMA data/Data/Final Dataset 02-07-2022.csv")
library(tidyverse);library(lme4);library(ggplot2);library(DataCombine)
library(EMAtools);library(nlme);library(lmerTest)
library(performance);library(brms)
rema = rema[!rema$subject_id %in% c(23335,23406,23408,23404,23411),]
rema$time = rema$timestamp/60
rema$time = rema$time/60
length(table(rema$subject_id))
# LIFE_IS_NOT_WORTH_LIVING_FOR_ME is passive ideation
# lowest base rate = I_THINK_ABOUT_TAKING_MY_LIFE
library(lme4)
library(tidyverse)
rema$passive1 = rema[,"LIFE_IS_NOT_WORTH_LIVING_FOR_ME"]
rema$passive2 = rema[,"THERE_ARE_MORE_REASON_TO_DIE_THAN_TO_LIV"]
rema$active1 = rema[,"EMA_FE5"]
rema$active2 = rema[,"EMA_FE6"]
library(mice)
#mi.out = mice(rema[,c("passive1","passive2","active1","active2")],m=1)
#rema[,c("passive1","passive2","active1","active2")] = complete(mi.out)
rema = rema[complete.cases(rema[,c("passive1","passive2","active1","active2")]),]
cor(rema[,c("passive1","passive2","active1","active2")])
psych::fa.parallel(rema[,c("passive1","passive2","active1","active2")])
rema$active = rowSums(rema[,c("active1","active2")])
rema$passive = rowSums(rema[,c("passive1","passive2")])
rema_comp = rema
library(lubridate)
library(dplyr)
#sort from least recent to most recent
#rema_comp %>% arrange(mdy(rema_comp$local_date))
#rema_comp2 = rema_comp[order(as.Date(rema_comp$local_date, format="%m/%d/%Y")),]
#rema_comp3 = rema_comp[with(rema_comp,order(respondent_id,Date,Time)),]
library(doBy)
dtparts = t(as.data.frame(strsplit(rema_comp$local_date,' ')))
colnames(dtparts) = c("day","hour")
dtparts <- as.data.frame(dtparts)
rema_comp$day = dtparts$day
rema_comp$hour = dtparts$hour
rema_comp2 = orderBy(~respondent_id+time, data=rema_comp)
id = names(which(table(rema_comp2$subject_id) < 20))
rema_comp3 = rema_comp2[!rema_comp2$subject_id %in% id,]
table(rema_comp3$subject_id)
rema_comp3$time_0 = NA
tabb = table(rema_comp3$subject_id)
for(i in 1:length(tabb)){
nam = names(tabb[i])
rema_comp3[rema_comp3$subject_id == nam,"time_0"] = rema_comp3[rema_comp3$subject_id == nam,"time"] - min(rema_comp3[rema_comp3$subject_id == nam,"time"])
}
summary(lengths(sapply(split(rema_comp3$day,rema_comp3$subject_id),table)))
# discrete time
# create time number variable
rema_comp3$time_seq = NA
tabb = table(rema_comp3$subject_id)
for(i in 1:length(tabb)){
nam = names(tabb[i])
rema_comp3[rema_comp3$subject_id == nam,"time_seq"] = 1:tabb[i]
}
time_id = rema_comp3[,c("subject_id","time")]
library(psych)
diff1 = diff(time_id$time)
diff2 = diff1[abs(diff1) <= 12]
hist(diff2,32,xlab="Hours Between Assessments",main="")
mean(diff2)
table(round(diff2))
rema_comp4 = rema_comp3
datt4.sub = rema_comp4[,c("HOW_MANY_FRIENDS_FAMILY_MEMBERS_HAVE_YOU","HOW_MANY_MINUTES_HAVE_YOU_SPENT_DIRECTLY",
"HOW_MEANINGFUL_WERE_YOUR_INTERACTIONS","SINCE_THE_LAST_PROMPT_HAVE_YOU_EXPERIEN","subject_id")]
library(tidyverse); library(broom)
datt4.sub2 = datt4.sub %>%
group_by(subject_id) %>%
scale()
datt4.sub3 = cbind(datt4.sub2[,-5],rema_comp4[,c("active","passive","time_0","time_seq","subject_id")])
colnames(datt4.sub3)[1:4] = c("number_social_interact","minutes_social","meaning_interactions","social_conflict")
library(ctsem)
#rema <- read.csv("/Volumes/GoogleDrive/Shared drives/Time_Adaptive_STB/Data/Final Merge rEMA mEMA.csv")
#rema <- read.csv("G:/Shared drives/Time_Adaptive_STB/Data/Final Merge rEMA mEMA.csv")
colnames(rema)
rema <- read.csv("G:/Shared drives/Remote EMA Study (Long-Term Text)/First 30 day EMA data/Data/Final Dataset 02-07-2022.csv")
rema <- read.csv("/Volumes/GoogleDrive/Shared drives/Remote EMA Study (Long-Term Text)/First 30 day EMA data/Data/Final Dataset 02-07-2022.csv")
library(tidyverse);library(lme4);library(ggplot2);library(DataCombine)
library(EMAtools);library(nlme);library(lmerTest)
library(performance);library(brms)
rema = rema[!rema$subject_id %in% c(23335,23406,23408,23404,23411),]
rema$time = rema$timestamp/60
rema$time = rema$time/60
length(table(rema$subject_id))
library(lme4)
library(tidyverse)
rema$passive1 = rema[,"LIFE_IS_NOT_WORTH_LIVING_FOR_ME"]
rema$passive2 = rema[,"THERE_ARE_MORE_REASON_TO_DIE_THAN_TO_LIV"]
rema$active1 = rema[,"EMA_FE5"]
rema$active2 = rema[,"EMA_FE6"]
library(mice)
rema = rema[complete.cases(rema[,c("passive1","passive2","active1","active2")]),]
cor(rema[,c("passive1","passive2","active1","active2")])
psych::fa.parallel(rema[,c("passive1","passive2","active1","active2")])
rema$si = rowSums(rema[,c("active1","active2","passive1","passive2")])
rema_comp = rema
library(lubridate)
library(dplyr)
library(doBy)
dtparts = t(as.data.frame(strsplit(rema_comp$local_date,' ')))
colnames(dtparts) = c("day","hour")
dtparts <- as.data.frame(dtparts)
rema_comp$day = dtparts$day
rema_comp$hour = dtparts$hour
rema_comp2 = orderBy(~respondent_id+time, data=rema_comp)
id = names(which(table(rema_comp2$subject_id) < 20))
rema_comp3 = rema_comp2[!rema_comp2$subject_id %in% id,]
table(rema_comp3$subject_id)
rema_comp3$time_0 = NA
tabb = table(rema_comp3$subject_id)
for(i in 1:length(tabb)){
nam = names(tabb[i])
rema_comp3[rema_comp3$subject_id == nam,"time_0"] = rema_comp3[rema_comp3$subject_id == nam,"time"] - min(rema_comp3[rema_comp3$subject_id == nam,"time"])
}
summary(lengths(sapply(split(rema_comp3$day,rema_comp3$subject_id),table)))
# create time number variable
rema_comp3$time_seq = NA
tabb = table(rema_comp3$subject_id)
for(i in 1:length(tabb)){
nam = names(tabb[i])
rema_comp3[rema_comp3$subject_id == nam,"time_seq"] = 1:tabb[i]
}
time_id = rema_comp3[,c("subject_id","time")]
library(psych)
diff1 = diff(time_id$time)
diff2 = diff1[abs(diff1) <= 12]
hist(diff2,32,xlab="Hours Between Assessments",main="")
mean(diff2)
table(round(diff2))
rema_comp4 = rema_comp3
datt4.sub = rema_comp4[,c("HOW_MANY_FRIENDS_FAMILY_MEMBERS_HAVE_YOU","HOW_MANY_MINUTES_HAVE_YOU_SPENT_DIRECTLY",
"HOW_MEANINGFUL_WERE_YOUR_INTERACTIONS","SINCE_THE_LAST_PROMPT_HAVE_YOU_EXPERIEN","subject_id")]
library(tidyverse); library(broom)
datt4.sub2 = datt4.sub %>%
group_by(subject_id) %>%
scale()
datt4.sub3 = cbind(datt4.sub2[,-5],rema_comp4[,c("si","time_0","time_seq","subject_id")])
colnames(datt4.sub3)[1:4] = c("number_social_interact","minutes_social","meaning_interactions","social_conflict")
library(ctsem)
examplemodel55 <- ctModel(type="stanct",id="subject_id",time="time_0",
n.latent=3,n.manifest=3,n.TDpred=0,
manifestNames=c("si","meaning_interactions","social_conflict"),
latentNames=c("si","meaning_interactions","social_conflict"),
LAMBDA=diag(3),
DRIFT=matrix(c("drift_passive",0,0,
"drift_meaning_interactions_passive","drift_meaning_interactions",0,
"drift_social_conflict_passive",0,"drift_social_conflict"),3,3,byrow=T))
fit55 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel55,iter=2000,#optimcontrol=(finishsamples=2000),
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
plot(fit55)
seq(from = 0, to = 20, by = 0.1)
xx <- ctStanDiscretePars(fit55,nsamples=2000,times = seq(from = 0, to = 20, by = 0.1))
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='Cross Lag Parameters')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.passive" | g1$data$Effect == "meaning_interactions.passive"]
plot(g12)
g12$data = g12$data[g1$data$Effect == "social_conflict.si" | g1$data$Effect == "meaning_interactions.si"]
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.si" | g1$data$Effect == "meaning_interactions.si"]
plot(g12)
examplemodel55 <- ctModel(type="stanct",id="subject_id",time="time_0",
n.latent=3,n.manifest=3,n.TDpred=0,
manifestNames=c("si","meaning_interactions","social_conflict"),
latentNames=c("si","meaning_interactions","social_conflict"),
LAMBDA=diag(3),
DRIFT=matrix(c("drift_si",0,0,
"drift_meaning_interactions_si","drift_meaning_interactions",0,
"drift_social_conflict_si",0,"drift_social_conflict"),3,3,byrow=T))
fit55 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel55,iter=2000,#optimcontrol=(finishsamples=2000),
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
#nlcontrol=list(maxtimestep=20))#,inits=c(-.1,-.5))#inits=list(drift_I_THINK_ABOUT_TAKING_MY_LIFE=-.5))
summary(fit55,timeinterval=10)
plot(fit55)
plot(g12)
plot(g12) + scale_x_discrete(labels = c('Meaning Interactions -> SI','Six'))
library(tidyverse)
ggplot(mtcars) + geom_boxplot(aes(factor(cyl), mpg))
plot(g12) + scale_color_manual(labels = c('Meaning Interactions -> SI','Social Conflict -> SI'))
plot(g12) + scale_color_manual(labels = c('Meaning Interactions -> SI','Social Conflict -> SI'),
values = c("red", "blue"))
plot(g12) + guides(fill="none") + scale_color_manual(labels = c('Meaning Interactions -> SI','Social Conflict -> SI'),
values = c("red", "blue"))
plot(fit55)
#nlcontrol=list(maxtimestep=20))#,inits=c(-.1,-.5))#inits=list(drift_I_THINK_ABOUT_TAKING_MY_LIFE=-.5))
summary(fit55,timeinterval=10)
?ctStanFit
fit55$pars
ctKalman(fit55,plot=TRUE,subjects=1:3)
#nlcontrol=list(maxtimestep=20))#,inits=c(-.1,-.5))#inits=list(drift_I_THINK_ABOUT_TAKING_MY_LIFE=-.5))
summary(fit55,timeinterval=10)
summary(fit55)$popmeans
summary(fit55)$popmeans[,c(1,2,3,5)]
datt4.sub3$si
datt4.sub3$si = datt4.sub3$si - 4
examplemodel55 <- ctModel(type="stanct",id="subject_id",time="time_0",
n.latent=3,n.manifest=3,n.TDpred=0,
manifestNames=c("si","meaning_interactions","social_conflict"),
latentNames=c("si","meaning_interactions","social_conflict"),
LAMBDA=diag(3),
DRIFT=matrix(c("drift_si",0,0,
"drift_meaning_interactions_si","drift_meaning_interactions",0,
"drift_social_conflict_si",0,"drift_social_conflict"),3,3,byrow=T))
fit55 <- ctStanFit(datalong=datt4.sub3,ctstanmodel=examplemodel55,iter=2000,#optimcontrol=(finishsamples=2000),
chains=4,cores=4,#optimcontrol=list(deoptim=T),
stationary=F,optimize=T,savesubjectmatrices=F)
plot(fit55)
g1 <- ctStanDiscreteParsPlot(xx, indices='CR') +
ggplot2::labs(title='Cross Lag Parameters')
g12 = g1
g12$data = g12$data[g1$data$Effect == "social_conflict.si" | g1$data$Effect == "meaning_interactions.si"]
plot(g12) + guides(fill="none") + scale_color_manual(labels = c('Meaning Interactions -> SI','Social Conflict -> SI'),
values = c("red", "blue"))
summary(fit55)$popmeans[,c(1,2,3,5)]
datt4.sub3$time_0
summary(datt4.sub3[datt4.sub3$time_0==0,]
summary(datt4.sub3[datt4.sub3$time_0==0,])
summary(fit55)$popmeans[,c(1,2,3,5)]
pars = summary(fit55)$popmeans[1:15,c(1,2,3,5)]
pars
pars = summary(fit55)$popmeans[1:14,c(1,2,3,5)]
pars
write.csv(pars, "/Volumes/GoogleDrive/Shared drives/Remote EMA Study (Long-Term Text)/interpersonal/ctsem_pars.csv")
